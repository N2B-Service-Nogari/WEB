#################
# <[스택]> <타입>: <제목> 의 형식으로 제목을 아래 공백줄에 작성
# 제목은 50자 이내 / 변경사항이 "무엇"인지 명확히 작성 / 끝에 마침표 금지
# 스택: FE, BE, ALL, DevOps 중 하나 작성
# 예)[FE] feat: 로그인 기능 추가

# 바로 아래 공백은 지우지 마세요 ( 제목과 본문의 분리를 위함)

#################
# 본문(구체적인 내용)을 아랫줄에 작성
# 여러가지 항목이 있따면 글머리 기호를 통해 가독성 높일 것
# 예) - 변경내용1
#     상세내용
#     - 변경내용2

#################
# 꼬릿말(footer)을 아랫줄에 작성 (현재 커밋과 관련된 이슈 번호 추가 등)
# 예) 이슈: S08P31C206-16
#     이슈: 없음

이슈: S08P31C206-
#이슈 : 엾음
#################
# feat : 새로운 기능 추가
# fix : 버그 수정
# docs : 문서 수정
# style : 코드 formatting, 세미콜론 누락, 코드 자체의 변경이 없는 경우
# refactor : 코드 리팩토링
# test : 테스트 코드, 리팩토링 테스트 코드 추가
# chore : 패키지 매니저 수정, 그 외 기타 수정 ex).gitignore
# design : CSS 등 사용자 UI 디자인 변경
# comment : 필요한 주석 추가 및 변경
# rename : 파일 또는 폴더 명을 수정하거나 옮기는 작업만의 경우
# remove : 파일을 삭제하는 작업만 수행한 경우
# !BREAKING CHANGE : 커다란 API 변경의 경우
# !HOTFIX : 급하게 치명적인 버그를 고쳐야하는 경우
#################
#
#################
# 참고사항
#
# - VS코드 안에서 커밋시 글자가 밀리는 현상이 발생하는데 결과물에는 영향을 안미칩니다.
# - ^M은 인코딩문제로 발생하는 것이므로 매번 지우셔야합니다.
#################
#
#################
# vim 명령어
#
# :w  저장
# :q  나가기
# :wq  저장하고 나가기
# :q!  커밋을 취소하고 싶을 때
# !를 끝에 붙이면 강제로 실행
#################
#
#################
# 커밋 메시지 템플릿 적용방법
#
# 1. local에서 명령어 입력하기
# git config --local commit.template .gitmessage.txt
#
# 2. commit 하기
# - 'git add .'를 통해서 변경사항이 있는 파일을 스테이지에 올린다.
# - 'git commit' 을 누르고 엔터를 치면 위의 템플릿이 나온다.
# - 키보드에서 's'를 누르고 수정한 이후에 모든 커밋메세지를 입력한 후, 'esc'를 누르고 빠져나온다. ':wq'를 누르고 엔터를 치면 정상적으로 커밋이된다.
#################

